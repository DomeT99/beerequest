import { Api, RequestParams } from '../src/index';
import fetchMock from 'jest-fetch-mock';

/**
 * In this test suite are used the API of "https://jsonplaceholder.typicode.com/" 
 * as a reference for generating errors and exception. 
 * */
describe("Suite error call", () => {
    /**In this suite, tests are performed 
     * for possible errors generated by calls 
     * */
    jest.setTimeout(20000);

    test("Check status result: ex. 404 NOT FOUND", async () => {
        /**Generic test for status return: status 404 as an example */
        fetchMock.mockResponse(JSON.stringify(404));

        let params: RequestParams = {
            url: 'https://jsonplaceholder.typicode.com/posts/14654645',
            method: "GET"
        };


        let callTest = await Api.callGlobal(params);


        expect(callTest).toEqual(404);
    })

    test("Check status result with CB Function: ex. 404 NOT FOUND", async () => {
        /**Generic test with callback functions for status return: status 404 as an example */
        fetchMock.mockResponse(JSON.stringify(404));

        let params: RequestParams = {
            url: 'https://jsonplaceholder.typicode.com/posts/14654645',
            method: "GET"
        };


        await Api.callGlobal(params, (result) => {
            return result;
        }, (error) => {
            expect(error).toBe(404);
        });
    })

})