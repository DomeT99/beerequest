import { Api, RequestParams, StatusCall, GenericMessage } from '../src/index';
import fetchMock from 'jest-fetch-mock';

/**
 * In these test suite are used the API of "https://pokeapi.co/" 
 * as a reference for generating errors and exception. 
 * */

describe("Test success call", () => {

    test("Success call", async () => {
        let result = {
            "firmness": {
                "name": "soft",
                "url": "https://pokeapi.co/api/v2/berry-firmness/2/"
            },
            "flavors": [
                {
                    "flavor": {
                        "name": "spicy",
                        "url": "https://pokeapi.co/api/v2/berry-flavor/1/"
                    },
                    "potency": 10
                },
                {
                    "flavor": {
                        "name": "dry",
                        "url": "https://pokeapi.co/api/v2/berry-flavor/2/"
                    },
                    "potency": 0
                },
                {
                    "flavor": {
                        "name": "sweet",
                        "url": "https://pokeapi.co/api/v2/berry-flavor/3/"
                    },
                    "potency": 0
                },
                {
                    "flavor": {
                        "name": "bitter",
                        "url": "https://pokeapi.co/api/v2/berry-flavor/4/"
                    },
                    "potency": 0
                },
                {
                    "flavor": {
                        "name": "sour",
                        "url": "https://pokeapi.co/api/v2/berry-flavor/5/"
                    },
                    "potency": 0
                }
            ],
            "growth_time": 3,
            "id": 1,
            "item": {
                "name": "cheri-berry",
                "url": "https://pokeapi.co/api/v2/item/126/"
            },
            "max_harvest": 5,
            "name": "cheri",
            "natural_gift_power": 60,
            "natural_gift_type": {
                "name": "fire",
                "url": "https://pokeapi.co/api/v2/type/10/"
            },
            "size": 20,
            "smoothness": 25,
            "soil_dryness": 15
        }
        fetchMock.mockResponse(JSON.stringify(result));

        let params: RequestParams = {
            url: "https://pokeapi.co/api/v2/berry/1",
            method: "GET"
        }

        let callTest = await Api.callGlobal(params);

        expect(callTest).toEqual(result);
    })
})

describe("Suite error call", () => {
    /**In this suite, tests are performed 
     * for possible errors generated by calls 
     * */
    test("Check status result: ex. 404 NOT FOUND", async () => {
        /**Generic test for status return: status 404 as an example */

        fetchMock.mockResponse(JSON.stringify(StatusCall.STAT_404));

        let params: RequestParams = {
            url: 'https://pokeapi.co/api/v2/generation/1200',
            method: "GET"
        };


        let callTest = await Api.callGlobal(params);


        expect(callTest).toEqual(StatusCall.STAT_404);
    })


    test("Catch error", async () => {
        /**Testing the catch() block during the call */
        fetchMock.mockResponse(JSON.stringify(GenericMessage.CATCH_ERROR));

        let params: RequestParams = {
            url: 'https://pokeaspi.co/api/v2/generation/1200',
            method: "GET"
        };


        let callTest = await Api.callGlobal(params);


        expect(callTest).toEqual(GenericMessage.CATCH_ERROR);
    })
})